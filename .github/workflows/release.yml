name: Release flyte manifest

on:
  push:
    tags:
      - 'v*'

jobs:
  goreleaser:
    name: Goreleaser
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump-version.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"

      - name: Preprare Flyte Release
        env:
          FLYTE_BOT_PAT: ${{ secrets.FLYTE_BOT_PAT }}
        run: |
          # from refs/tags/v1.2.3 get v1.2.3
          VERSION=$(echo $GITHUB_REF | sed 's#.*/##')
          grep -rlZ "version:[^P]*# VERSION" ./helm/Chart.yaml | xargs -0 sed -i "s/version:[^P]*# VERSION/version: ${VERSION} # VERSION/g"
          sed -i "s/v0.1.10/${VERSION}/g" ./helm/README.md
          VERSION=$VERSION make prepare_artifacts

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.FLYTE_BOT_PAT }}

      - name: Release helm registry
        env:
          FLYTE_BOT_PAT: ${{ secrets.FLYTE_BOT_PAT }}
        run: |
          # from refs/tags/v1.2.3 get v1.2.3
          VERSION=$(echo $GITHUB_REF | sed 's#.*/##')
          grep -rlZ "version:[^P]*# VERSION" ./helm/Chart.yaml | xargs -0 sed -i "s/version:[^P]*# VERSION/version: ${VERSION} # VERSION/g"
          # Commit Chart registry to github gh-pages
          bin/cr index --owner evalsocket --git-repo flyte --charts-repo="https://evalsocket.github.io/flyte" --push --token=${FLYTE_BOT_PAT} --release-name-template="{{ .Version }}"

